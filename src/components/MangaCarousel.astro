---
import type { Manga } from "../models/Manga";
import CarouselButton from "../components/CarouselButton.astro";
import MangaCard from "../components/MangaCard.astro";

export interface Props {
  title: string;
  mangas: Manga[];
}

const { title, mangas } = Astro.props;

const carouselID = title + "-carousel";
---

<div class="flex flex-col m-auto p-auto mt-4">
  <h2 class="pt-2 ml-4 font-bold text-2xl text-secondary">{title}</h2>

  <div class="relative">
    <div id={carouselID} class="carousel flex overflow-x-scroll">
      <CarouselButton position="left" carouselID={carouselID} />

      <div class="flex flex-nowrap space-x-3 max-lg:space-x-2 my-3 m-2">
        {mangas.map((manga) => <MangaCard manga={manga} />)}
      </div>
      
      <CarouselButton position="right" carouselID={carouselID} />
    </div>

    <script>
      const buttons = document.querySelectorAll(".btn-circle");
      const carousels = document.querySelectorAll(".carousel");

      window.addEventListener("load", () => {
        buttons.forEach((button) => {
          showOrHideButtons(button);
        });
      });

      window.addEventListener("resize", () => {
        buttons.forEach((button) => {
          showOrHideButtons(button);
        });
      });

      buttons.forEach((button) => {
        const btnData = button.id.split("-");
        const carouselID = btnData[0] + "-carousel";
        const direction = btnData[2];

        button.addEventListener("click", () => {
          moveCarousel(carouselID, direction);
        });
      });

      carousels.forEach((carousel) => {
        carousel.addEventListener("scroll", () => {
          buttons.forEach((button) => {
            const btnData = button.id.split("-");

            // if is inside another carousel, ignore
            if (carousel.id === btnData[0] + "-carousel")
              showOrHideButtons(button);
          });
        });
      });

      function moveCarousel(carouselID: string, direction: string) {
        const scrollAmount = 200;
        const scrollDirection =
          direction === "left" ? -scrollAmount : scrollAmount;

        const carousel = document.getElementById(`${carouselID}`);

        carousel?.scrollBy({
          left: scrollDirection,
          behavior: "smooth",
        });
      }

      function getCarouselStatus(carousel: HTMLElement) {
        const carouselWidth = carousel.scrollWidth;
        const carouselScrollLeft = carousel.scrollLeft;
        const carouselClientWidth = carousel.clientWidth;
        const carouselScrollRight = carouselWidth - carouselClientWidth;

        // detect when there is no scroll

        if (carouselWidth === carouselClientWidth) return "none";
        if (carouselScrollLeft === carouselScrollRight) return "end";
        if (carouselScrollLeft === 0) return "start";
        return "middle";
      }

      function showOrHideButtons(button: Element) {
        const btnData = button.id.split("-");
        const carouselID = btnData[0] + "-carousel";

        const carousel = document.getElementById(`${carouselID}`);
        if (!carousel) return;

        const carouselPosition = getCarouselStatus(carousel);

        if (carouselPosition === "start") {
          if (button.id.includes("left")) {
            button.classList.add("hidden");
          } else {
            button.classList.remove("hidden");
          }
        } else if (carouselPosition === "end") {
          if (button.id.includes("right")) {
            button.classList.add("hidden");
          } else {
            button.classList.remove("hidden");
          }
        } else if (carouselPosition === "middle") {
          button.classList.remove("hidden");
        } else {
          button.classList.add("hidden");
        }
      }
    </script>
  </div>
</div>
